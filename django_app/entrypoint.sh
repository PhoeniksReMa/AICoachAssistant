#!/bin/sh
set -e

# ---------------------------------------------
# 0) Подгружаем переменные из .env (с конвертацией CRLF→LF)
# ---------------------------------------------
if [ -f /app/.env ]; then
  echo "=== Подгружаем переменные окружения из .env …"
  # Сначала убираем возможные \r (если .env в DOS-формате) и записываем временно в переменную
  # (тут используем subshell, чтобы не заменять сам файл на диске)
  ENV_CONTENT=$(tr -d '\r' < /app/.env)

  # Экспортируем все строки вида KEY=VALUE
  echo "$ENV_CONTENT" | while IFS='=' read -r KEY VALUE; do
    # Игнорируем пустые строки и строки, начинающиеся с '#'
    case "$KEY" in
      ''|\#*) continue ;;
      *) export "$KEY"="$VALUE" ;;
    esac
  done
else
  echo "!!! .env файл не найден, все переменные должны быть уже в окружении."
fi

# ---------------------------------------------
# 1) Применяем миграции Django
# ---------------------------------------------
echo "=== Применяем миграции Django…"
python manage.py migrate --noinput

# ---------------------------------------------
# 2) Создаём суперпользователя (если не существует)
# ---------------------------------------------
echo "=== Создаём суперпользователя ${DJANGO_SUPERUSER_USERNAME} …"
python manage.py createsuperuser --noinput \
    --username "${DJANGO_SUPERUSER_USERNAME}" \
    --email "${DJANGO_SUPERUSER_EMAIL}" || \
  echo "!!! Superuser уже существует или не удалось создать."

# ---------------------------------------------
# 3) Запускаем Django-сервер в фоне (0.0.0.0:8000)
# ---------------------------------------------
echo "=== Запускаем Django-сервер …"
python manage.py runserver 0.0.0.0:8000 &

# ---------------------------------------------
# 4) Запускаем Telegram-бота
# ---------------------------------------------
echo "=== Запускаем Telegram-бота …"
python telegram_bot.py

# Когда telegram_bot.py завершится, процесс контейнера тоже остановится.
